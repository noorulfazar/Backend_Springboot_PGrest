spring.application.name=employeePGrest
server.port=9090
#server.port=8080
# PostgREST API (used via WebClient)
#postgrest.api.url=http://localhost:3000/employee
#postgrest.api.url=http://localhost:3000

# For PostgREST (container-to-container communication)
postgrest.api.url=http://postgrest-api:3000

# ADD a property for our JWT secret
app.jwt.secret=supersecretkeysupersecretkeysupersecretkey

# If you have Spring Security, make /auth/login public
#spring.security.permit-all=/api/auth/login

# PostgreSQL DB config
#spring.datasource.url=jdbc:postgresql://localhost:5432/employeedb
#spring.datasource.url=jdbc:postgresql://localhost:5432/employeedb
# For PostgreSQL (container-to-container)
spring.datasource.url=jdbc:postgresql://postgres-db:5432/employeedb

spring.datasource.username=postgres
spring.datasource.password=admin123

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# This tells Hibernate which SQL dialect to use for the chosen database.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Actuator settings (for Docker healthcheck)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

